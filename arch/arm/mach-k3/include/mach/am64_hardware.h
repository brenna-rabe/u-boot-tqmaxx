/* SPDX-License-Identifier: GPL-2.0+ */
/*
 * K3: AM64 SoC definitions, structures etc.
 *
 * (C) Copyright (C) 2020 Texas Instruments Incorporated - https://www.ti.com/
 */
#ifndef __ASM_ARCH_AM64_HARDWARE_H
#define __ASM_ARCH_AM64_HARDWARE_H

#ifndef __ASSEMBLY__
#include <linux/bitops.h>
#endif

#define CTRL_MMR0_BASE					0x43000000

#define CTRLMMR_WKUP_JTAG_DEVICE_ID			(CTRL_MMR0_BASE + 0x18)
#define JTAG_DEV_ID_MASK				GENMASK(31, 18)
#define JTAG_DEV_ID_SHIFT				18
#define JTAG_DEV_CORE_NR_MASK				GENMASK(23, 22)
#define JTAG_DEV_CORE_NR_SHIFT				22
#define JTAG_DEV_R5_ADC_MASK				GENMASK(19, 18)
#define JTAG_DEV_R5_ADC_SHIFT				18
#define JTAG_DEV_FEATURES_MASK				GENMASK(17, 13)
#define JTAG_DEV_FEATURES_SHIFT				13
#define JTAG_DEV_SECURITY_MASK				BIT(12)
#define JTAG_DEV_SECURITY_SHIFT				12
#define JTAG_DEV_SAFETY_MASK				BIT(11)
#define JTAG_DEV_SAFETY_SHIFT				11
#define JTAG_DEV_SPEED_MASK				GENMASK(10, 6)
#define JTAG_DEV_SPEED_SHIFT				6
#define JTAG_DEV_TEMP_MASK				GENMASK(5, 3)
#define JTAG_DEV_TEMP_SHIFT				3
#define JTAG_DEV_PKG_MASK				GENMASK(2, 0)
#define JTAG_DEV_PKG_SHIFT				0

#define JTAG_DEV_ID_AM6442				0xca3
#define JTAG_DEV_ID_AM6441				0xc93
#define JTAG_DEV_ID_AM6422				0xca1
#define JTAG_DEV_ID_AM6421				0xc91
#define JTAG_DEV_ID_AM6412				0xca0
#define JTAG_DEV_ID_AM6411				0xc90

#define JTAG_DEV_FEATURES_C				0x3
#define JTAG_DEV_FEATURES_D				0x4
#define JTAG_DEV_FEATURES_E				0x5
#define JTAG_DEV_FEATURES_F				0x6

#define CTRLMMR_WKUP_DEVICE_FEATURE0			(CTRL_MMR0_BASE + 0x60)
#define CTRLMMR_WKUP_DEVICE_FEATURE2			(CTRL_MMR0_BASE + 0x68)
#define CTRLMMR_WKUP_DEVICE_FEATURE6			(CTRL_MMR0_BASE + 0x78)

#define DEVICE_FEATURE0_R5FSS1_CORE_MASK		GENMASK(19, 18)
#define DEVICE_FEATURE0_R5FSS1_CORE_SHIFT		18
#define DEVICE_FEATURE0_R5FSS0_CORE_MASK		GENMASK(17, 16)
#define DEVICE_FEATURE0_R5FSS0_CORE_SHIFT		16
#define DEVICE_FEATURE0_MPU_CORE_MASK			GENMASK(1, 0)
#define DEVICE_FEATURE0_MPU_CORE_SHIFT			0

#define CTRLMMR_MAIN_DEVSTAT				(CTRL_MMR0_BASE + 0x30)

#define PADCFG_MMR1_BASE				0xf0000

#define MAIN_DEVSTAT_PRIMARY_BOOTMODE_MASK		0x00000078
#define MAIN_DEVSTAT_PRIMARY_BOOTMODE_SHIFT		3

#define MAIN_DEVSTAT_PRIMARY_BOOTMODE_CFG_MASK		0x00000380
#define MAIN_DEVSTAT_PRIMARY_BOOTMODE_CFG_SHIFT		7

#define MAIN_DEVSTAT_BACKUP_BOOTMODE_MASK		0x00001c00
#define MAIN_DEVSTAT_BACKUP_BOOTMODE_SHIFT		10

#define MAIN_DEVSTAT_BACKUP_BOOTMODE_CFG_MASK		0x00002000
#define MAIN_DEVSTAT_BACKUP_BOOTMODE_CFG_SHIFT		13

/* After the cfg mask and shifts have been applied */
#define MAIN_DEVSTAT_PRIMARY_MMC_PORT_SHIFT		2
#define MAIN_DEVSTAT_PRIMARY_MMC_PORT_MASK		0x04

#define MAIN_DEVSTAT_PRIMARY_USB_MODE_SHIFT		1
#define MAIN_DEVSTAT_PRIMARY_USB_MODE_MASK		0x02

#define MAIN_DEVSTAT_BACKUP_USB_MODE_MASK		0x01

/*
 * The CTRL_MMR and PADCFG_MMR memory space is divided into several
 * equally-spaced partitions, so defining the partition size allows us to
 * determine register addresses common to those partitions.
 */
#define CTRL_MMR0_PARTITION_SIZE			0x4000

/*
 * CTRL_MMR and PADCFG_MMR lock/kick-mechanism shared register definitions.
 */
#define CTRLMMR_LOCK_KICK0				0x01008
#define CTRLMMR_LOCK_KICK0_UNLOCK_VAL			0x68ef3490
#define CTRLMMR_LOCK_KICK0_UNLOCKED_MASK		BIT(0)
#define CTRLMMR_LOCK_KICK0_UNLOCKED_SHIFT		0
#define CTRLMMR_LOCK_KICK1				0x0100c
#define CTRLMMR_LOCK_KICK1_UNLOCK_VAL			0xd172bc5a

#define ROM_ENTENDED_BOOT_DATA_INFO			0x701beb00

/* Use Last 2K as Scratch pad */
#define TI_SRAM_SCRATCH_BOARD_EEPROM_START		0x7019f800

/* GPMC/NAND */
#define ELM_BASE					0x025010000

#endif /* __ASM_ARCH_DRA8_HARDWARE_H */
